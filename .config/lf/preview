#!/bin/dash

f=$(readlink -f "$1")
[ "$6" = "verbose" ] && verbose='v' || verbose=''

if [ -d "$1" ]; then
    tree -aC "$1"
    exit 0
fi

exists() {
    command -v "$1" >/dev/null
}

preview_image() {
    if [ -n "$verbose" ] || ! exists chafa; then
        preview_mediainfo "$1"
        return
    fi
    if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ] || [ -z "$DISPLAY" ]; then
        w=$(($2-3))
        opts="-f symbols --animate false --polite on"
    else
        w=$2 && [ $w -gt 70 ] && w=70
        opts="-f sixels --animate false --polite on --dither ordered --dither-intensity 0.85"
    fi
    case "$f" in
        *.six) convert "$1" jpg:- | chafa -s "${w}x${3}" $opts ;;
            *) chafa -s "${w}x${3}" $opts "$1" ;;
    esac
}

preview_mediainfo() {
    case "$f" in
        *.webp) exists exiftool && { exiftool "$1"; return; }
    esac
    if exists mediainfo; then
        if [ -n "$verbose" ]; then
            mediainfo "$1"
        else
            mediainfo "$1" | sed -E 's/^(.{25})([^:]*): (.+)/\1 : \3/'
        fi
    elif exists exiftool; then
        exiftool "$1"
    else
        echo "Install mediainfo or exiftool"
    fi
}

preview_appimage() {
    if [ ! -x "$1" ]; then
        echo "'$1' is not executable : cannot list files!"
        exit 0
    fi
    mountpoint="${XDG_RUNTIME_DIR:-${TMPDIR:-/tmp}}/lf-appimage-mountpoint-$$"
    rm -f "$mountpoint"
    mkfifo "$mountpoint"
    "$1" --appimage-mount > "$mountpoint" &
    read appdir < "$mountpoint"
    files='' && [ -n "$appdir" ] && files=$(cd "$appdir" && LC_TIME=en_US.UTF-8 find . -ls)
    kill $!
    rm -f "$mountpoint"
    [ -n "$files" ] && echo "$files" || return 1
}

batorcat() {
    if [ -n "$verbose" ]; then
        case "$(file --brief --mime-type -- "$f")" in
            text/*|application/*json|application/xml)
                ;;
            *) [ $(tput cols) -ge 80 ] && p=2 || p=1
                hexyl --panels $p -- "$f"
                return ;;
        esac
    fi
    [ -n "$verbose" ] && w='auto' || w='never'
    exists bat && { bat -pp -f --wrap=$w -- "$1"; true; } || cat -- "$1"
}

case "$f" in
    *.bmp|*.gif|*.jpg|*.jpeg|*.png|*.six|*.svg|*.tiff|*.webp)
        preview_image "$1" "$2" "$3" "$4" "$5" ;;
    *.avi|*.m4v|*.mkv|*.mp3|*.mp4)
        preview_mediainfo "$1" ;;
    *.pdf)
        pdftotext "$1" - ;;
    *.odt|*.ods|*.odp|*.sxw)
        odt2txt "$1" ;;
    *.doc)
        catdoc "$1" ;;
    *.docx)
        docx2txt "$1" - ;;
    *.[1-8])
        man "$1" | col -b ;;
    *.o)
        nm "$1" ;;
    *.md)
        glow -s dark "$1" ;;
    *.7z|*.deb|*.iso|*.jar|*.rar|*.tar|*.tar.??|*.tar.???|*.tbz|*.tbz2|*.tgz|*.txz|*.tzst|*.zip)
        LC_TIME=en_US.UTF-8 bsdtar -t${verbose}f "$1" ;;
    *.gz)
        gunzip -l${verbose} "$1" ;;
    *.xz)
        unxz -l${verbose} "$1" ;;
    *.zst)
        unzstd -l${verbose} "$1" 2>&1 ;;
    *.AppImage|*.appimage)
        [ -n "$verbose" ] && preview_appimage "$1" 2>/dev/null || batorcat "$1" ;;
    *.torrent)
        exists transmission-show && transmission-show "$1" || batorcat "$1" ;;
    *)
        batorcat "$1" ;;
esac
exit 0
